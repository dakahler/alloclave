<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="newToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAERSURBVDhPrZDbSgJRGIXnpewd6jXsjSQvIrwoI0RQMChU
        0iiDPCGiE3ZCRkvR8VzTeBhnyR5/ccaZNnPhB4t9sdf6Ln5hb8QeathNJFVFKF5C8DqL4ksDVHWGDf7j
        LHyPg6NjviSaFqlu5yQYR+KpupaIkrMknCxT3Y7v/NYYb0ITK1c3BarbWWhLQ7IR0cTKReyZ6lZ0XYei
        ztHpK4bAc+h1FgQijzSxMptrGIxVSO0xX3AaStFki7bUMVFmaMm/eJMGfIH/MkGzLep0AXn4h/r3CJV3
        mS9gn2bY4UY/UzQ7E9TqfeTFtnuB+XAfzSHKr11kSl/uBebDiZ89ZCst3OUkdwL28sIVsE83ock+EIQV
        2Mz2wxeg6/UAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        F7JSR4LcB3wbAAAAAElFTkSuQmCC
</value>
  </data>
</root>