<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJy0AAAEAIABOBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAnAAAALQgGAAAALThyUwAAAAlw
        SFlzAAALEwAACxMBAJqcGAAABABJREFUWIW9mF+IVFUcxz/n3N3U1W3TRt1QSmsJiZCIIoIoyUQhCaKI
        yOgfPUQ9SP5pbUOQCCQXo5JCtFDBgqSeeiqrh5560zQMEWqtzVJT0Wlmd2bnntPDuTPM3Ll7fnfmXv3C
        ZYbf73d+5zNnfuffVRu3vcPp8XGCICBn3Qv0pow9A4zFjT2V6hST1UrecKuAbzuIPwC8EDf2aAUKjULn
        BQbwVofxC5KMuRJFWgk81GGbQpLxasCNdNHmRuC6uDFvuBXAw120uwHojxvzhuu01urqB+bGjXnCPQg8
        0mXbXmBe3JgnnFRrRvDPjxvygnsAWO3xHwO+E3IsjBvygpNGbQdwXIgZjBvygLsfWOPx/wl8AVSEPG1w
        PRmg6hoBlMe/S0HNYMomtCil0DoxvKnmVC5w9wGPevxngU9CY1hQKBwaWnrL2OVSafHp8TPbtWr7QSuA
        g9ZSmiiXNhlji1nhpFH7GLhkLcyaOePU8GuvnPrq8A+Ff85f2KaDYGYsdhBYZ61lcqK8A0wxS83dA6z1
        +C8Cu4noK1VXcsUr/9nQ2JIxhqQHQCs9D7JNiBGh/V7gHBFdtVoFwJqpEtYWUckDrhzd/CxwdwOPefxF
        YFdzj7Va6L4bKtaYK9PWglJopRdC9xPiTcB3Ot0P/NXUH2Ho4Ppm91kL57TWWGsT2DSB1kvBdgV3F/C4
        xz8BvN/SIYpqraa3jr63rlyeGJiqTA7asEY7GoeVUidrYXgEVFdwW/CP2ufAb60mRRgafv7lxNtKqSVa
        KyqVBDS3WH/qKq/zs/ly4AmPvwrsnMZngiD4Q2uN61wnPbe5T1eRncJtwV+nXwK/evwXhfwtW1gncHcC
        T3r8ITAq5JDgWk4mncAN47+Hfg0cFXJcEPwtZ7q0cHcAT3n8Fng3RZ5/BX/LRSct3DAJt6MmfQP8lCKP
        NHItF500cMuAp4WY7SnyAJwX/P04QCAd3Bv4R+174McUeQAuCf5e3F8LyNvX7cAzQswy4Aj+o1Nds1LE
        NCaFBLcZmCHELIqevNRYTnx/6xDwbI6dplVjIfbBbQLip9VrIRHuVuC5a8PSJhFuI+mK92qo8a4uaUIs
        AZ4XEvwOTHXRsQVuAq73xBRwg2aS4DYAsz2Nj+JeP0iX5OngPgRe9cTMjfpvuxreDLwodDAKlLoAq+us
        4B/AjWzb1XADMMfT8CTuzJZF0v7aR/SurhluMfCS0HAn7rSbRdLJRBHtEs1wr5Pw6rNJY8BnmbCcpAMn
        RDO2DrcIeFlo8AFQzgBVl7T5Q7SF1eHW45/efwP7MkLVdRmoCTENuCHcBu/TR1HSPFTEf7UEt2oM9BhL
        v8VstahwmkAD7MkJDFzNrce/KpwAev8HYWH+Hfjy/oYAAAAASUVORK5CYII=
</value>
  </data>
</root>